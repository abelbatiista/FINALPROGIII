@page "/BenefitsList"
@inject IVehicleService VehicleService

<h3>Listado Vehículos</h3>
@message

<style>
    th, td {
        text-align: center;
    }

    .btn-circle {
        width: 45px;
        height: 45px;
        line-height: 45px;
        text-align: center;
        padding: 0;
        border-radius: 50%;
    }

    .btn-circle-sm {
        width: 35px;
        height: 35px;
        line-height: 35px;
        font-size: 0.9rem;
    }

    .btn-circle-xl {
        width: 70px;
        height: 70px;
        line-height: 70px;
        font-size: 1.3rem;
        position: fixed;
        bottom: 40px;
        right: 15px;
    }

    .btn-circle i {
        position: relative;
        top: -1px;
    }

    .tamano {
        font-size: 30px;
    }
</style>

@if (benefits == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Año</th>
                <th>Color</th>
                <th>Cantidad Reservas</th>
                <th>Dinero Facturado</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var benefit in benefits)
            {
                <tr>
                    <td>@benefit.Brand</td>
                    <td>@benefit.Model</td>
                    <td>@benefit.Year</td>
                    <td>@benefit.Color</td>
                    <td>@benefit.PassengersNumber</td>
                    <td>$@benefit.Price</td>
                </tr>
            }
        </tbody>

    </table>
}

@code {
    public IEnumerable<Vehicle> benefits { get; set; }
    public string message { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            benefits = await VehicleService.GetBenefitsForVehicle();
        }
        catch (Exception e)
        {
            message = e.Message;
        }
    }

}

